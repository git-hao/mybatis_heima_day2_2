<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--mybatis映射文件位置必须和dao接口的包结构相同，namespace是接口全限定类名-->
<mapper namespace="com.hao.dao.UserDao">

    <!--配置方法，id为dao方法名-->
    <!--使用自定义别名-->
    <select id="findAll" resultType="user">
        select * from  user
    </select>

    <insert id="saveUser" parameterType="com.hao.domain.User">
        <!-- 扩展：获得插入对象的id，keyProperty:实体类属性 keyColumn：数据库属性 order：执行时机-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,birthday,sex) values (#{username},#{birthday},#{sex})
    </insert>
    <update id="updateUser" parameterType="com.hao.domain.User">
        update user set username = #{username},birthday = #{birthday},sex = #{sex} where id = #{id}
    </update>
    <!--参数只有一个时，#{}可以随意写-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id = #{uid}
    </delete>
    <select id="findById" parameterType="INT" resultType="com.hao.domain.User">
        select * from user where id = #{uid}
    </select>
    <!--模糊查询的另一种方式：'%${value}%',固定写法,了解，不使用-->
    <select id="findByName" parameterType="String" resultType="com.hao.domain.User">
         select * from user where username like #{name}
        <!--select * from user where username like '%${value}%'-->
    </select>
    <select id="findTotal" resultType="Integer">
        select count(*) from user
    </select>
    <!--OGNL表达式简单-->
    <select id="findByVo" parameterType="QueryVo" resultType="User">
        select * from user where username like #{user.username}
    </select>
</mapper>
